service: bitcoin-auto-trader

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: ap-northeast-2
  memorySize: 512
  timeout: 300
  environment:
    BINANCE_API_KEY: ${env:BINANCE_API_KEY}
    BINANCE_SECRET: ${env:BINANCE_SECRET}
    SNS_TOPIC_ARN: 
      Ref: TradingNotificationTopic
    S3_BUCKET: ${self:service}-${self:provider.stage}-trading-state
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}-trading-state
    iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: TradingNotificationTopic

functions:
  autoTrade:
    handler: lambda_handler.main
    events:
      - schedule:
          rate: rate(5 minutes)
          enabled: true
    layers:
      - arn:aws:lambda:ap-northeast-2:770693421928:layer:Klayers-p311-pandas:9

resources:
  Resources:
    TradingNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-alerts
        DisplayName: Bitcoin Trading Bot Alerts

    TradingStateS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        VersioningConfiguration:
          Status: Enabled

    TradingStateDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: trading_pair
            AttributeType: S
        KeySchema:
          - AttributeName: trading_pair
            KeyType: HASH

  Outputs:
    SNSTopicArn:
      Description: "SNS Topic ARN for trading notifications"
      Value:
        Ref: TradingNotificationTopic

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
